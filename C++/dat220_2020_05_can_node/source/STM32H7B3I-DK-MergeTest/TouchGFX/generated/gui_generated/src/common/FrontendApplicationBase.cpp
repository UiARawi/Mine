/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include<platform/driver/lcd/LCD24bpp.hpp>
#include <gui/batteryscreen_screen/BatteryScreenView.hpp>
#include <gui/batteryscreen_screen/BatteryScreenPresenter.hpp>
#include <gui/historicalstats_screen/HistoricalStatsView.hpp>
#include <gui/historicalstats_screen/HistoricalStatsPresenter.hpp>
#include <gui/chargedischargescreen_screen/ChargeDischargeScreenView.hpp>
#include <gui/chargedischargescreen_screen/ChargeDischargeScreenPresenter.hpp>
#include <gui/powerscreen_screen/PowerScreenView.hpp>
#include <gui/powerscreen_screen/PowerScreenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
    touchgfx::Texts::setLanguage(GB);
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
}

/*
 * Screen Transition Declarations
 */

// BatteryScreen

void FrontendApplicationBase::gotoBatteryScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoBatteryScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoBatteryScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<BatteryScreenView, BatteryScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoBatteryScreenScreenSlideTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoBatteryScreenScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoBatteryScreenScreenSlideTransitionWestImpl()
{
    touchgfx::makeTransition<BatteryScreenView, BatteryScreenPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// HistoricalStats

void FrontendApplicationBase::gotoHistoricalStatsScreenSlideTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoHistoricalStatsScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoHistoricalStatsScreenSlideTransitionWestImpl()
{
    touchgfx::makeTransition<HistoricalStatsView, HistoricalStatsPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// ChargeDischargeScreen

void FrontendApplicationBase::gotoChargeDischargeScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoChargeDischargeScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoChargeDischargeScreenScreenSlideTransitionEastImpl()
{
    touchgfx::makeTransition<ChargeDischargeScreenView, ChargeDischargeScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// PowerScreen

void FrontendApplicationBase::gotoPowerScreenScreenSlideTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoPowerScreenScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoPowerScreenScreenSlideTransitionWestImpl()
{
    touchgfx::makeTransition<PowerScreenView, PowerScreenPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}
